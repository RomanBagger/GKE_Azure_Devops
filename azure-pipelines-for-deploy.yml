trigger: none  #this for test, more comfortable

pool:
  name: 'Default'
  demands:
    - agent.name -equals instance-20250115-185328

variables:
  GCP_SERVICE_CONNECTION: 'mygcpconnection'
  Working_Directory: '$(System.DefaultWorkingDirectory)/applications'

steps:

- script: |
    gcloud container clusters get-credentials $(CLUSTER_NAME) --zone $(ZONE) --project $(PROJECT)
  workingDirectory: $(Working_Directory)
  displayName: 'Connection to GKE'

- task: HelmInstaller@1
  inputs:
    helmVersionToInstall: 'latest'

- script: |
    helm upgrade --install ingress ingress_rules/helm_chart  
  workingDirectory: $(Working_Directory)
  displayName: 'Deploy ingress rules'

- script: |
    helm upgrade --install nginx app1/helm_chart
  workingDirectory: $(Working_Directory)
  displayName: 'Deploy first application'

- script: |
    helm upgrade --install tomcat app2/helm_chart 
  workingDirectory: $(Working_Directory)
  displayName: 'Deploy second application'

- script: |
    # Сheck Helm status
    set -e
    RELEASES=("ingress" "nginx" "tomcat")
    for release in "${RELEASES[@]}"; do
      STATUS=$(helm status $release -o json | jq -r '.info.status')
      if [ "$STATUS" != "deployed" ]; then
        echo "Release $release is in $STATUS status, rolling back..."
        helm rollback $release
        exit 1
      fi
    done
  displayName: 'Helm deployed currectly'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      #!/bin/bash
      sleep 20
      BASE_URL="https://romanmarkov.org"
      PATHS=(
          "/app1"
          "/app2"
          "/port5000"
          "/port6000"
      )

      check_path() {
          local url=$1
          local path=$2
          echo "Проверка пути: $url$path"

          http_code=$(curl --write-out "%{http_code}" --silent --output /dev/null "$url$path")

          if [ "$http_code" -eq 200 ]; then
              echo "OK: $url$path $http_code"
          else
              echo "ERROR: $url$path $http_code"
              if [ "$url$path" == "https://romanmarkov.org/app1" ]; then
                helm rollback nginx --namespace default
              else
                helm rollback tomcat --namespace default
              fi
          fi
      }

      for path in "${PATHS[@]}"; do
          check_path $BASE_URL $path
      done

      echo "All services are deployed and accessible."
  displayName: 'Verify Deployment and Rollback if Necessary'